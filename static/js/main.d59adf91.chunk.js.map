{"version":3,"sources":["components/search-weather/searchWeather.js","components/show-weather/show-weather.js","components/fav-cities-list/fav-cities-list.js","App.js","index.js"],"names":["SearchWeather","props","state","text","autocomplete","onValueChange","bind","onSubmit","e","this","setState","target","value","preventDefault","onSearch","className","class","id","placeholder","type","onChange","for","onClick","Component","ShowWeather","weather","addFav","date","main","name","sys","country","Math","round","temp","FavList","favourites","map","item","index","size","removeFav","App","city","JSON","parse","localStorage","getItem","search","currentDate","setCurrentCity","api","fetch","then","res","json","result","cities","indexOf","push","setItem","stringify","newArr","slice","data","day","getDay","getDate","month","getMonth","year","getFullYear","Date","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d59adf91.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nexport default class SearchWeather extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            text: \"\",\r\n            autocomplete: []\r\n        };\r\n        this.onValueChange = this.onValueChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onValueChange(e) {\r\n        this.setState({\r\n            text: e.target.value\r\n        });\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        this.props.onSearch(this.state.text);\r\n        this.setState({\r\n            text: \"\"\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"weather--form\">\r\n                <div class=\"input-wrapper\">\r\n                    <input\r\n                        id=\"search-weather\"\r\n                        placeholder=\"Введите город... \"\r\n                        type=\"text\"\r\n                        onChange={this.onValueChange}\r\n                        value={this.state.text}\r\n                    />\r\n                    <label for=\"search-weather\" class=\"fa fa-search input-icon\"></label>\r\n                </div>\r\n                <button className=\"show--result__btn\" onClick={this.onSubmit}>\r\n                    Показать\r\n                </button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { Component } from \"react\";\r\n\r\nexport default class ShowWeather extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    render() {\r\n        const { weather, addFav, date } = this.props;\r\n        return weather.main ? (\r\n            <div className=\"weather--result\">\r\n                <div className=\"weather--result__city\">\r\n                    {weather.name}, {weather.sys.country}\r\n                </div>\r\n                <div className=\"weather--result__data\">{date}</div>\r\n                <button className=\"secondary-btn\" onClick={() => addFav(weather.name)}>\r\n                    Добавить в изранное\r\n                </button>\r\n                <div className=\"weather--result__temperature\">{Math.round(weather.main.temp)}°C</div>\r\n            </div>\r\n        ) : (\r\n            \"\"\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { Component } from \"react\";\r\n\r\nexport default class FavList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    render() {\r\n        const favourites = this.props.favourites.map((item, index) => {\r\n            return (\r\n                <li key={index} className=\"fav-item\">\r\n                    <span onClick={() => this.props.onSearch(item)}>{item}</span>\r\n                    <button\r\n                        className=\"secondary-btn delete-btn\"\r\n                        size=\"large\"\r\n                        onClick={() => this.props.removeFav(index)}\r\n                    >\r\n                        Удалить\r\n                    </button>\r\n                </li>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <div className=\"weather--favourites\">\r\n                <ul>{favourites}</ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport SearchWeather from \"./components/search-weather/searchWeather\";\r\nimport ShowWeather from \"./components/show-weather/show-weather\";\r\nimport FavList from \"./components/fav-cities-list/fav-cities-list\";\r\n\r\nexport default class App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            city: \"\",\r\n            country: \"\",\r\n            weather: \"\",\r\n            favourites: JSON.parse(localStorage.getItem(\"cities\")) || [] //получаем список избранных городов. Если его нет, присваиваем пустой массив\r\n        };\r\n        this.search = this.search.bind(this);\r\n        this.addFav = this.addFav.bind(this);\r\n        this.currentDate = this.currentDate.bind(this);\r\n        this.removeFav = this.removeFav.bind(this);\r\n        this.setCurrentCity = this.removeFav.bind(this);\r\n    }\r\n\r\n    search(city) {\r\n        const api = {\r\n            key: \"a8c07f8a8d80fb52a4794b2fe34b7671\",\r\n            base: \"https://api.openweathermap.org/data/2.5/\"\r\n        };\r\n\r\n        fetch(`${api.base}weather?q=${city}&units=metric&APPID=${api.key}`)\r\n            .then((res) => res.json())\r\n            .then((result) => {\r\n                this.setState({ weather: result });\r\n                this.setState({ city: \"\" });\r\n            });\r\n    }\r\n\r\n    setCurrentCity() {}\r\n\r\n    componentDidMount() {\r\n        fetch(\"https://www.travelpayouts.com/whereami?locale=ru\")\r\n            .then((res) => res.json())\r\n            .then((result) => {\r\n                this.setState({ city: result.name });\r\n                this.search(this.state.city);\r\n            });\r\n    }\r\n\r\n    addFav(city) {\r\n        if (localStorage.getItem(\"cities\")) {\r\n            let cities = JSON.parse(localStorage.getItem(\"cities\"));\r\n            // Проверяем, есть ли такой город в избранном\r\n            if (cities.indexOf(city) < 0) {\r\n                cities.push(city); //если нет, добавляем\r\n                localStorage.setItem(\"cities\", JSON.stringify(cities));\r\n                this.setState({ favourites: cities });\r\n            }\r\n        } else {\r\n            let cities = [city];\r\n            localStorage.setItem(\"cities\", JSON.stringify(cities));\r\n            this.setState({ favourites: cities });\r\n        }\r\n    }\r\n\r\n    removeFav(index) {\r\n        this.setState(({ favourites }) => {\r\n            const newArr = [...favourites.slice(0, index), ...favourites.slice(index + 1)]; //создаем новый массив без элемента с нужным индексом\r\n            localStorage.setItem(\"cities\", JSON.stringify(newArr)); //перезаписываем новый массив в localStorage\r\n\r\n            return {\r\n                favourites: newArr\r\n            };\r\n        });\r\n    }\r\n\r\n    //Конвертация текущей даты\r\n    currentDate(data) {\r\n        const months = [\r\n            \"Январь\",\r\n            \"Февраль\",\r\n            \"Март\",\r\n            \"Апрель\",\r\n            \"Май\",\r\n            \"Июнь\",\r\n            \"Июль\",\r\n            \"Август\",\r\n            \"Сентябрь\",\r\n            \"Октябрь\",\r\n            \"Ноябрь\",\r\n            \"Декабрь\"\r\n        ];\r\n        const days = [\"Воскресенье\", \"Понедельник\", \"Вторник\", \"Среда\", \"Четверг\", \"Пятница\", \"Суббота\"];\r\n\r\n        const day = days[data.getDay()];\r\n        const date = data.getDate();\r\n        const month = months[data.getMonth()];\r\n        const year = data.getFullYear();\r\n\r\n        return `${day} ${date} ${month} ${year}`;\r\n    }\r\n\r\n    render() {\r\n        const { city, weather, country, favourites } = this.state;\r\n        return (\r\n            <div className=\"app\">\r\n                <main className=\"weather--container\">\r\n                    <SearchWeather onSearch={this.search} />\r\n                    <ShowWeather\r\n                        addFav={this.addFav}\r\n                        weather={weather}\r\n                        city={city}\r\n                        country={country}\r\n                        date={this.currentDate(new Date())}\r\n                    />\r\n                    <FavList favourites={favourites} removeFav={this.removeFav} onSearch={this.search} />\r\n                </main>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}